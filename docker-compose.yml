version: '3'

services:
    postgres:
      image: postgres:13
      container_name: postgresDB13
      restart: always
      ports:
        - "5433:5432"
      environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
      volumes:
        - postgres13_data:/var/lib/postgresql/data
        - postgres13_logs:/var/log/postgresql
      networks:
        - mynetwork

    zookeeper:
      image: wurstmeister/zookeeper:latest
      container_name: WURzookeeper
      restart: always
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
      ports:
        - 2181:2181
      volumes:
        - zookeeper_data:/zookeeper/data
        - zookeeper_txns:/zookeeper/txns
        - zookeeper_logs:/zookeeper/logs
      networks:
        - mynetwork
          
    kafka:
      image: wurstmeister/kafka:latest
      container_name: WURkafka
      restart: always
      links:
        - zookeeper
      ports:
        - 9092:9092
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
        KAFKA_LISTENERS: INTERNAL://:29092,EXTERNAL://:9092
        KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      volumes:
        - kafka_data:/kafka/data
        - kafka_logs:/kafka/logs
        - kafka_conf:/kafka/config
      networks:
        - mynetwork

    debezium:
      image: debezium/connect:1.9
      container_name: Ddebezium
      restart: always
      ports:
        - 8083:8083
      environment:
        CONFIG_STORAGE_TOPIC: my_connect_configs
        OFFSET_STORAGE_TOPIC: my_connect_offsets
        STATUS_STORAGE_TOPIC: my_connect_statuses
        BOOTSTRAP_SERVERS: kafka:29092
      depends_on:
        - kafka
        - zookeeper
        - postgres  
      volumes:
        - debezium_conf:/kafka/config
        - debezium_logs:/kafka/logs
      networks:
        - mynetwork

    kafdrop:
      image: obsidiandynamics/kafdrop
      container_name: kafdrop
      restart: always
      environment:
        KAFKA_BROKERCONNECT: "kafka:29092"
      ports:
        - 9000:9000
      depends_on:
        - kafka
      networks:
        - mynetwork    

    debezium-ui:
      image: debezium/debezium-ui:2.4
      container_name: debezium_ui
      restart: always
      depends_on:
        - debezium
      restart: always
      ports:
        - "8081:8080"
      environment:
        - KAFKA_CONNECT_URIS=http://debezium:8083
      networks:
        - mynetwork
        
    pgadmin:
        image: elestio/pgadmin:REL-8_2
        depends_on: 
            - postgres
        container_name: pgadmin
        restart: always
        ports:
            - "8082:8080"
        environment:
            PGADMIN_DEFAULT_EMAIL: root@gmail.com
            PGADMIN_DEFAULT_PASSWORD: root
            PGADMIN_LISTEN_PORT: 8080
        networks:
            - mynetwork
            
networks:
  mynetwork:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: mynetwork
      com.docker.network.bridge.enable_ip_masquerade: "true"
      com.docker.network.bridge.enable_icc: "true"

volumes:
  postgres13_data:
    driver: local

  postgres13_logs:
    driver: local
    
  zookeeper_data:
    driver: local
    
  zookeeper_txns:
    driver: local
    
  zookeeper_logs:
    driver: local

  kafka_data:
    driver: local

  kafka_logs:
    driver: local

  kafka_conf:
    driver: local

  debezium_logs:
    driver: local

  debezium_conf:
    driver: local
      
  pgadmin_servers:
    driver: local
